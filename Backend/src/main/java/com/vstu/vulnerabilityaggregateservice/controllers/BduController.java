package com.vstu.vulnerabilityaggregateservice.controllers;

import com.vstu.vulnerabilityaggregateservice.dtos.BduDto;
import com.vstu.vulnerabilityaggregateservice.services.BduService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping(path = "/bdu")
public class BduController {
    @Autowired
    private BduService bduService;

    @GetMapping("/{id}")
    @PreAuthorize("hasRole('USER') or hasRole('MODERATOR') or hasRole('ADMIN')")
    public ResponseEntity<BduDto> getById(@PathVariable String id) {
        return bduService.getBduById(id);
    }

    @GetMapping("pagination/{offset}/{pageSize}")
    @PreAuthorize("hasRole('USER') or hasRole('MODERATOR') or hasRole('ADMIN')")
    public ResponseEntity<Page<BduDto>> getPaginationBdu(@PathVariable int offset, @PathVariable int pageSize) {
        return  bduService.getBduList(offset, pageSize);
    }

    @PostMapping(path = "/",
            consumes = MediaType.APPLICATION_JSON_VALUE,
            produces = MediaType.APPLICATION_JSON_VALUE
    )
    @PreAuthorize("hasRole('MODERATOR') or hasRole('ADMIN')")
    public ResponseEntity<Void> addBdu(@RequestBody BduDto dto) {
        return bduService.createBdu(dto);
    }

    @PutMapping(path = "/",
            consumes = MediaType.APPLICATION_JSON_VALUE,
            produces = MediaType.APPLICATION_JSON_VALUE
    )
    @PreAuthorize("hasRole('MODERATOR') or hasRole('ADMIN')")
    public ResponseEntity<Void> updateBdu(@RequestBody BduDto dto) {
        return bduService.updateBdu(dto);
    }

    @GetMapping("byCveId/{id}")
    @PreAuthorize("hasRole('USER') or hasRole('MODERATOR') or hasRole('ADMIN')")
    public ResponseEntity<BduDto> getByCveId(@PathVariable String id) {
        return bduService.getByCveIds(id);
    }
}
